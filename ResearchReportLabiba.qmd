---
title: "Decoding Breast Cancer Cells: What are their most important features, what makes these features different from a regular cell, and can we use these distinct features to detect breatcancer before Stage I?"
author: "Labiba Siddiquei"
format: html
editor: visual
---

```{r}
#| echo: false
#| message: false
#| include: false
# loading in the packages and libraries 
library(titanic)
library(dplyr)
library(janitor)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(tidymodels)
library(glmnet)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(psych)
library(caTools)
library(readr)
library(downloader)
library(FNN)
library(readxl)
library(gmodels)
library(ggpubr)
library(ggplot2)
library(broom)
library(AICcmodavg)
library(dbplyr)
library(purrr)
library(broom)
```

```{r}
#| echo: false
#| message: false
#| include: false
#loading in the datasets 
data = readRDS("data") # original data 
num_data = readRDS("num_data") # the original data but diagnosis column contains 1 and 0 instead of M and B. 1 = malignant , 0 = Benign 
cleaned_num_data = readRDS("cleaned_num_data") ## does not contain any outliers and diagnosis column contains 1 and 0 
```

## Abstract 

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Background 

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## Results  

## Discussion 

```{r}
#| echo: false
#| message: false
#| include: false

########.      conducting pca - Principal component analysis     #################

# First on numerical data with outliers **dataset used = num_data 
normalized_data = scale(num_data) #normalizing the data 
data.pca = princomp(normalized_data) #conducting PCA
#summary(data.pca) #generating summary of PCA #undo # to see results
#data.pca$loadings[, 1:5] # loading components 1 through 5 #generating summary of PCA #undo # to see results
```

## Code and Data Availability   

## Acknowledgements  

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
#| message: false
#| include: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
